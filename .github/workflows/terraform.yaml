name: terraform
on: 
    workflow_dispatch: 
        inputs:
            mattias-input:
                description: 'This is a description, a bad one.'
                default: 'Spr√•k'
                required: false
                type: string
            karol-input:
                type: choice
                options:
                    - Val1
                    - Val2
                    - Val3
                default: 'Val2'
                required: false
            azcopy:
                type: boolean
                required: true
    push:
        # branches: main
env:
    mattias-env: dev
    GH_TOKEN: ${{ secrets.TOKEN }}
    AZURE_CLIENT_ID: ${{vars.CLIENT_ID}}
    AZURE_SUBSCRIPTION_ID: ${{vars.SUB_ID}}
    AZURE_TENANT_ID: ${{vars.TENANT_ID}}
    STORAGE_ACCOUNT_NAME: sttfstate00001

permissions: write-all
jobs:
    terraform-plan: 
        name: terraformplan
        runs-on: ubuntu-latest
        # environment: ${{ matrix.environment }}
        defaults:
            run:
                shell: pwsh
                working-directory: ${{github.workspace}}/terraform
        strategy:
            matrix:
                environment: 
                    - dev
                    # - prod
        outputs:
            kommerglassbilen: ${{steps.glassbilen.outputs.nagotannat}}
        steps:
            - uses: hashicorp/setup-terraform@v3
              if: contains(runner.os, 'linux')
              with: 
                terraform_version: "1.11.2"
            - uses: actions/checkout@v2
            - uses: kheiakiyama/install-azcopy-action@v1
              if: ${{inputs.azcopy}}
              with:
                version: 'v10'
            # - name: mybiggeststep
            #   id: glassbilen
            #   run: |
            #         write-host 'Testing testing ${{ inputs.mattias-input }}'
            #         write-host '${{ inputs.karol-input }}'
            #         $variable='Glassbilen'
            #         echo "::add-mask::$variable"
            #         "nagotannat=$variable" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
            # - name: output
            #   run: |
            #         write-host ${{steps.glassbilen.outputs.nagotannat}}
            #         write-host ${{secrets.GITHUB_TOKEN}}
            #         gh variable set grillkorv --body "kokt"
            #         write-host ${{vars.CLIENT_ID}}
            #         write-host ${{vars.SUB_ID}}
            #         write-host ${{vars.TENANT_ID}}
            - name: Azure Login
              uses: Azure/login@v2.2.0
              if: true
              with:
                client-id: ${{env.AZURE_CLIENT_ID}}
                subscription-id: ${{env.AZURE_SUBSCRIPTION_ID}}
                tenant-id: ${{env.AZURE_TENANT_ID}}
            - name: terraform-plan
              run: |
                #    az group create -l swedencentral -n min-forsta-rg-01
                #    az group list -o tsv --query "[].name"
                #    $aztoken=az account get-access-token -o tsv --query accessToken
                #    write-host ($aztoken).Substring(0,50)
                #    az group list -o tsv --query "[?name=='min-forsta-rg-01'].name"
                   terraform init -backend-config="storage_account_name=${{env.STORAGE_ACCOUNT_NAME}}"
                   terraform plan
                
    # terraform-glass: 
    #     runs-on: ubuntu-latest
    #     needs: [terraform-plan]
    #     defaults:
    #         run:
    #             shell: pwsh
    #     steps:
    #         - name: output
    #           run: |
    #                 write-host "${{needs.terraform-plan.outputs.kommerglassbilen}}"
    # terraform-trigger:
    #     name: terraformtrigger
    #     uses: microbroke/micro-dev/.github/workflows/trigger.yaml@main
    #     needs:
    #         terraform-plan
    #     with:
    #         ingen-lon: ${{needs.terraform-plan.result}}
            