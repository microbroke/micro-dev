name: terraform
on: 
    workflow_dispatch: 
        inputs:
            mattias-input:
                description: 'This is a description, a bad one.'
                default: 'Spr√•k'
                required: false
                type: string
            karol-input:
                type: choice
                options:
                    - Val1
                    - Val2
                    - Val3
                default: 'Val2'
                required: false
            azcopy:
                type: boolean
                required: true
    push:
        branches: main
env:
    mattias-env: dev
permissions: 
    contents: write
    id-token: write
    actions: write
jobs:
    terraform-plan: 
        name: terraformplan
        runs-on: ubuntu-latest
        environment: ${{ matrix.environment }}
        defaults:
            run:
                shell: pwsh
                working-directory: ${{github.workspace}}
        strategy:
            matrix:
                environment: 
                    - dev
                    # - prod
        steps:
            - uses: hashicorp/setup-terraform@v3
              if: false
              with: 
                terraform_version: "1.11.2"
            - uses: actions/checkout@v2
            - uses: kheiakiyama/install-azcopy-action@v1
              if: ${{inputs.azcopy}}
              with:
                version: 'v10'
            - name: mybiggeststep
              id: glassbilen
              run: |
                    write-host 'Testing testing ${{ inputs.mattias-input }}'
                    write-host '${{ inputs.karol-input }}'
                    $variable='Glassbilen'
                    echo "::add-mask::$variable"
                    "nagotannat=$variable" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
            - name: output
              run: |
                    write-host ${{steps.glassbilen.outputs.nagotannat}}
        outputs:
            kommerglassbilen: ${{steps.glassbilen.outputs.nagotannat}}
    terraform-glass: 
        runs-on: ubuntu-latest
        needs: [terraform-plan]
        defaults:
            run:
                shell: pwsh
        steps:
            - name: output
              run: |
                    write-host "${{needs.terraform-plan.outputs.kommerglassbilen}}"
    # terraform-trigger:
    #     name: terraformtrigger
    #     uses: microbroke/micro-dev/.github/workflows/trigger.yaml@main